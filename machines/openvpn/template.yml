# manage-order: 5000
# Manage.sh uses this file as a template for domain based openvpns.
version: '3.3'

services:
  ${OVPN_DOMAIN}_ovpn_dns:
      build: ../machines/openvpn/dns
      cap_add:
        - NET_ADMIN
      volumes:
        - ../data/ovpn/client:/opt/certs:ro

  ${OVPN_DOMAIN}_ovpn_ntp:
      build: ../machines/openvpn/ntp
      cap_add:
        - NET_ADMIN
      volumes:
        - ../data/ovpn/client:/opt/certs:ro
      ports:
        - "${NTP_PORT}:123/udp"

  ${OVPN_DOMAIN}_ovpn_minimal: &ovpn_minimal_${OVPN_DOMAIN}
    #container_name: ${DCPREFIX}_ovpn_minimal
    build: ../machines/openvpn/openvpn
    env_file:
      - ../settings
    command: echo 'exiting'
    environment:
        CONFIG_FILEPATH: /root/ovpn.config
        PATH_CCD: /root/ccd
        PATH_CA: /root/CA
        PATH_CONFIG_TEMPLATES: /root/config_templates
        PATH_CA_TEMPLATE: /tmp/ca_tmpl
        EASY_RSA: /root/openvpn-ca
        KEY_DIR: /root/keys
        SERVER_OUT: /root/server_out
        CLIENT_OUT: /root/client_out
        GREP: grep
        OPENSSL: openssl
        PKCS11TOOL: pkcs11-tool
        VPN_DOMAIN: ${OVPN_DOMAIN}
        OVPN_INTERNAL_REMOTE: ${OVPN_DOMAIN}_ovpn_server
        OVPN_INTERNAL_REMOTE_PORT: 1194
        OVPN_SERIAL_START: 10000
        CONFIG_TEMPLATE_INTERNAL_REMOTE: internalremote.conf

  ${OVPN_DOMAIN}_ovpn_manage: &ovpn_manage_${OVPN_DOMAIN}
    <<: *ovpn_minimal_${OVPN_DOMAIN}
    container_name: ${DCPREFIX}_ovpn_${OVPN_DOMAIN}_manage
    volumes:
        - ${OVPN_CONFIG_FILE}:/root/ovpn.config
        - ../machines/openvpn/config_templates:/root/config_templates
        - ../data/ovpn/${OVPN_DOMAIN}/CA:/root/CA
        - ../data/ovpn/${OVPN_DOMAIN}/keys:/root/keys
        - ../data/ovpn/${OVPN_DOMAIN}/server:/root/server_out
        - ../data/ovpn/${OVPN_DOMAIN}/client:/root/client_out
        - ../data/ovpn/${OVPN_DOMAIN}/ccd:/root/ccd


  ${OVPN_DOMAIN}_ovpn_client_key_generator:  # generate client keys on the fly
    <<: *ovpn_minimal_${OVPN_DOMAIN}
    <<: *ovpn_manage_${OVPN_DOMAIN}
    container_name: ${DCPREFIX}_ovpn_client_key_generator
    command: python /usr/local/bin/run_client_key_generator_web.py 80
    ports:
        - "12500:80/tcp"
    #healthcheck:
        #test: ["CMD-SHELL", "/root/tools/healthcheck.sh"]
        #interval: 15s
        #timeout: 5s
        #retries: 2

  ${OVPN_DOMAIN}_ovpn_server:
    <<: *ovpn_minimal_${OVPN_DOMAIN}
    container_name: ${DCPREFIX}_ovpn_server
    cap_add:
        - NET_ADMIN
    ports:
        - "${OVPN_PORT}:1194/tcp"
        - "${OVPN_PORT}:1194/udp"
    env_file:
      - ../settings
    command: /usr/local/bin/run_ovpn_server.sh
    #healthcheck:
        #test: ["CMD-SHELL", "/root/tools/healthcheck.sh"]
        #interval: 15s
        #timeout: 5s
        #retries: 2

  ${OVPN_DOMAIN}_ovpn_clientprovisioner:
    container_name: ${DCPREFIX}_ovpn_clientprovisioner
    build: ../machines/openvpn/vpnconfs_provisioner
    # using nginx subdomain 
    #ports:to reach this /ovpn_confs
    #    - "${OVPNWEB_PORT}:8080"
    volumes:
        - ../data/ovpn/${OVPN_DOMAIN}/client:/root/transfer:ro
    command: python3 /root/tools/monjerri.py
