# manage-order: 5000
# Manage.sh uses this file as a template for domain based openvpns.
version: '3.3'

services:
  ${OVPN_DOMAIN}_ovpn_dns:
      build: ../machines/openvpn/dns
      cap_add:
        - NET_ADMIN
      volumes:
        - ../data/ovpn/client:/opt/certs:ro

  ${OVPN_DOMAIN}_ovpn_ntp:
      build: ../machines/openvpn/ntp
      cap_add:
        - NET_ADMIN
      volumes:
        - ../data/ovpn/client:/opt/certs:ro
      ports:
        - "${NTP_PORT}:123/udp"

  ovpn_minimal: &ovpn_minimal
    #container_name: ${DCPREFIX}_ovpn_minimal
    build: ../machines/openvpn/openvpn
    env_file:
      - ../settings
    command: echo 'exiting'

  ${OVPN_DOMAIN}_ovpn_manage:
    <<: *ovpn_minimal
    container_name: ${DCPREFIX}_ovpn_${OVPN_DOMAIN}_manage
    volumes:
        - ../config/ovpn/:/root/input_confs:ro
        - ../data/ovpn/CA/keys:/root/openvpn-ca/keys
        - ../data/ovpn/CA:/root/transfer
        - ../data/ovpn/server:/root/server_out
        - ../data/ovpn/client:/root/client_out

  ${OVPN_DOMAIN}_ovpn_server:
    <<: *ovpn_minimal
    container_name: ${DCPREFIX}_ovpn_server
    cap_add:
        - NET_ADMIN
    ports:
        - "${OVPN_PORT}:1194/tcp"
        - "${OVPN_PORT}:1194/udp"
    env_file:
      - ../settings
    command: /usr/local/bin/run_ovpn_server.sh
    #healthcheck:
        #test: ["CMD-SHELL", "/root/tools/healthcheck.sh"]
        #interval: 15s
        #timeout: 5s
        #retries: 2

  ${OVPN_DOMAIN}_ovpn_clientprovisioner:
    container_name: ${DCPREFIX}_ovpn_clientprovisioner
    build: ../machines/openvpn/config_provisioner
    # using nginx subdomain 
    #ports:to reach this /ovpn_confs
    #    - "${OVPNWEB_PORT}:8080"
    volumes:
        - ../data/ovpn/client:/root/transfer:ro
        - ../config/ovpn:/root/config:ro
    command: python3 /root/tools/monjerri.py
