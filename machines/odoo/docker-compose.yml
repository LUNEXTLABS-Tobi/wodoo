# manage-order 1000
version: '3.3'

services:
  odoo_base: &odoo_base
    container_name: ${CUSTOMS}_odoo_base
    build:
        context: $ODOO_HOME/machines/odoo
        args:
          ODOO_VERSION: ${ODOO_VERSION}
    security_opt:
      - apparmor:unconfined
      - seccomp:unconfined
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN
      - DAC_READ_SEARCH
    volumes:
      - ${DUMPS_PATH}:/opt/dumps
      - ${ODOO_FILES}/:/opt/files
      - ${ODOO_HOME}/admin:/opt/odoo/admin
      - ${ODOO_HOME}/data/src/customs/${CUSTOMS}:/opt/odoo/active_customs
      - ${ODOO_HOME}/data/src/customs/${CUSTOMS}/links:/opt/odoo/addons_customs
      - ${ODOO_HOME}/run/debug:/tmp/debug
    env_file:
      - $ODOO_HOME/run/settings
      - $ODOO_HOME/machines/odoo/docker-env
    command: echo 'odoo_base - good bye - it is ok!'
    logging:
        options:
            max-size: 1g

  odoo: &odoo
    <<: *odoo_base
    container_name: ${CUSTOMS}_odoo
    environment:
      DEBUGGER_WATCH: /tmp/debug/odoo_debug.txt
      DEBUGGER_ODOO_PID: /tmp/odoo.debug.pid
    command: /rootrun.sh

  odoo_debug:
    <<: *odoo_base
    container_name: ${CUSTOMS}_odoo_debug
    environment:
      ENDLESS_LOOP: 1
      DEBUGGER_WATCH: /tmp/debug/odoo_debug.txt
      DEBUGGER_ODOO_PID: /tmp/odoo.debug.pid
    command: /rootrun.sh
      
  odoo_cronjobs:
    <<: *odoo_base
    container_name: ${CUSTOMS}_odoo_cronjobs
    environment:
      IS_ODOO_CRONJOB: 1
    command: /rootrun.sh
    logging:
        options:
            max-size: 3g

  odoo_update:
    <<: *odoo_base
    container_name: ${CUSTOMS}_odoo_updater
    # called by manage.sh
    command: echo 'good bye - it is ok!'

  odoo_source_syncer: &odoo_source_syncer
    <<: *odoo_base
    container_name: ${CUSTOMS}_odoo_source_syncer
    command: rsync --daemon --no-detach
