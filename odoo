#!/usr/bin/env python3
from pathlib import Path
import sys
import time
import os
import inspect


SCRIPT_DIRECTORY = Path(inspect.getfile(inspect.currentframe())).absolute().parent

if os.getenv("DOCKER_MACHINE", "") == "1":
    raise Exception("Cannot execute this script in docker container.")
os.environ['HOST_HOME'] = os.environ['HOME']
os.environ['ODOO_HOME'] = str(SCRIPT_DIRECTORY)


sys.path.append(str(SCRIPT_DIRECTORY / 'tools'))
from odoo_tools import cli # NOQA
from odoo_tools import Commands # NOQA
from odoo_tools import HOST_RUN_DIR # NOQA
from odoo_tools.myconfigparser import MyConfigParser # NOQA
from odoo_tools.module_tools import make_customs # NOQA

os.environ['RUN_DIR'] = str(HOST_RUN_DIR)

if __name__ == '__main__':
    args = sys.argv[1:]

    if os.getenv("UID", "") == "0":
        import click
        click.secho("If you this odoo in root account, please set OWNER_UID=1000 in ~/.odoo/settings!", fg='red', bold=True)
        time.sleep(1)

    if len(sys.argv) > 1 and sys.argv[1] == 'init':
        if len(sys.argv) > 2:
            path = Path(sys.argv[2])
        else:
            path = Path(os.getcwd())
        make_customs(path)

    if not HOST_RUN_DIR:
        import click
        click.echo("Please enter into an odoo directory, which contains a MANIFEST file.")
        sys.exit(1)
    if not HOST_RUN_DIR.exists():
        with cli.make_context('odoo', ['-f']) as ctx:
            Commands.invoke(ctx, 'reload')
    cli()
