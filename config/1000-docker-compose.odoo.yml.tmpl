# so that ./manage.sh attach {machinename} works: container_name == prefix + service-name
version: '2'
volumes:
  opt_servers:
  opt_permanent:
  libreoffice_exchange:
  cupsdatatoprint:

services:
  odoo_base:
    container_name: ${DCPREFIX}_odoo_base
    build: ../machines/odoo
    security_opt:
      - apparmor:unconfined
      - seccomp:unconfined
    cap_add:
      - SYS_ADMIN
      - NET_ADMIN
      - DAC_READ_SEARCH
    volumes:
      - ../dumps:/opt/dumps
      - ../support_data/odoo.git:/opt/odoo.git:ro
      - ../support_data/openerp.git:/opt/openerp.git:ro
      - ../run/restore:/opt/restore
      - /opt/oefiles/:/opt/oefiles
      - cupsdatatoprint:/opt/toprint 
      - libreoffice_exchange:/opt/libreoffice
      - opt_permanent:/opt/permanent
      - opt_servers:/opt/servers
      - odoosource:/opt/openerp
      - ../data/src/admin:/opt/src/admin:ro
      - ../data/src/customs:/opt/src/customs:ro
    environment:
      DOCKER_MACHINE: 1
      CUPS_TOPRINT: /opt/toprint
      LIBREOFFICE_SEND: /opt/libreoffice/1
      LIBREOFFICE_RECEIVE: /opt/libreoffice/2
    env_file:
      - ../customs.env
    command: echo 'good bye - it is ok!'

  odoo:
    extends: odoo_base
    container_name: ${DCPREFIX}_odoo
    environment:
      LANG: 'en_US.UTF-8'
      LANGUAGE: 'en_US:en'
      DEBUGGER_WATCH: /tmp/odoo_debug.txt
      DEBUGGER_ODOO_PID: /tmp/odoo.debug.pid
    volumes:
      - ../run/odoo_debug.txt:/tmp/odoo_debug.txt
    command: /rootrun.sh
	ports:
        - "8072:8072"
      
  odoo_cronjobs:
    extends: odoo_base
    container_name: ${DCPREFIX}_odoo_cronjobs
    environment:
      IS_ODOO_CRONJOB: 1
    command: /rootrun.sh

  odoo_update:
    extends: odoo_base
    container_name: ${DCPREFIX}_odoo_updater
    # called by manage.sh
    command: echo 'good bye - it is ok!'

  odoo_lang_export:
    extends: odoo_base
    container_name: ${DCPREFIX}_odoo_lang_export
    command: /bin/echo 'hi'
    volumes:
      - ../run/i18n:/opt/i18n
    environment:
      LANG_EXPORT_DIR: /opt/i18n
