# so that ./manage.sh attach {machinename} works: container_name == prefix + service-name
version: '2'
volumes:
  postgresdata:
    external:
      name: ${DCPREFIX}_odoo_postgresdata
  filestorage:
    external:
      name: ${DCPREFIX}_odoo_filestorage
  sourcestorage:
    external:
      name: ${DCPREFIX}_odoo_sourcestorage
  recordingstorage:
    external:
      name: ${DCPREFIX}_odoo_recordingstorage

services:
  odoo:
    container_name: ${DCPREFIX}_odoo
    build: ../machines/odoo
    networks:
      - ${DCPREFIX}_default
    links:
      - postgres:postgres
      #circular...
      # - asterisk_ari:asterisk_ari
    volumes:
      - ../support_data/openerp.git:/opt/openerp.git:ro
      - ../support_data/odoo.git:/opt/odoo.git:ro
      - /opt/md5
      - sourcestorage:/opt/openerp
      - filestorage:/opt/oefiles
      - ../dumps:/opt/dumps
    env_file:
      ../customs.env

  postgres:
    container_name: ${DCPREFIX}_postgres
    build: ../machines/postgres
    networks:
      - ${DCPREFIX}_default
    volumes:
      - ../dumps:/opt/dumps
      - postgresdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: 1
      PGDATA: /var/lib/postgresql/data/pgdata
    env_file:
      ../customs.env

  nginx:
    container_name: ${DCPREFIX}_nginx
    image: nginx:stable
    networks:
      - ${DCPREFIX}_default
    links:
      - odoo:odoo
    ports:
      - "44480:80"
    env_file:
      ../customs.env
    volumes:
      - ../machines/nginx/nginx.conf:/mysite.template
    command: /bin/bash -c "echo 'setting up nginx conf'; cp /mysite.template /etc/nginx/conf.d/default.conf && sed -i "s/__HTTP_HOST__/$HTTP_HOST/g" /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  mail:
    container_name: ${DCPREFIX}_mail
    build: ../machines/mail
    networks:
      - ${DCPREFIX}_default
    expose:
      - "25"
      - "143"

  roundcube:
    container_name: ${DCPREFIX}_roundcube
    build: ../machines/roundcube
    networks:
      - ${DCPREFIX}_default
    links:
      - mail:mail
    #ports:
    #  - "8000:80"

  asterisk:
    container_name: ${DCPREFIX}_asterisk
    build: ../machines/asterisk/asterisk
    networks:
      - ${DCPREFIX}_default
    expose:
      # ari
      - 8088
    ports:
      # lsof -i -n -P
      - "8088:8088"
      - "5060:5060/udp"
      - "4569:4569/udp"
      - "2000:2000/tcp"
      - "4520:4520/udp"
      - "5000:5000/udp"
      # must match asterisk rtp.conf
      - "16384-16404:16384-16404/udp"
    environment:
      CUSTOMS: ${CUSTOMS}
    volumes:
      - recordingstorage:/var/spool/asterisk/recording
      - ../machines/asterisk/asterisk/etc/asterisk:/opt/etc.base
          
  asterisk_ari:
    container_name: ${DCPREFIX}_asterisk_ari
    build: ../machines/asterisk/ari
    expose:
      - 29925
    networks:
      - ${DCPREFIX}_default
    links:
      - asterisk:asterisk
      - odoo:odoo
    environment:
      ODOO_USER: asterisk_ari
      ODOO_PASSWORD: ari_connector
      ODOO_DB: $DBNAME
      ODOO_PORT: 8069
      ODOO_HOST: odoo
      USERNAME_ASTERISK: asterisk
      PASSWORD_ASTERISK: asterisk
      HOST_ASTERISK: asterisk
      PORT_ASTERISK: 8088

networks:
  ${DCPREFIX}_default:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
        - subnet: 4.4.4.0/24
          gateway: 4.4.4.1
